Nullables 



DOCUMENTATION: https://learn.microsoft.com/en-us/dotnet/csharp/nullable-migration-strategies

Enabling warnings and annotations control how the compiler views reference types and nullability. Every type has one of three nullabilities:
	- oblivious: All reference types are nullable oblivious when the annotation context is disabled.
	- nonnullable: An unannotated reference type, C is nonnullable when the annotation context is enabled.
	- nullable: An annotated reference type, C?, is nullable, but a warning may be issued when the annotation context is disabled. Variables declared with var are nullable when the annotation context is enabled.

The compiler generates warnings based on that nullability:
	- nonnullable types cause warnings if a potential null value is assigned to them.
	- nullable types cause warnings if they dereferenced when maybe-null.
	- oblivious types cause warnings if they're dereferenced when maybe-null and the warning context is enabled.

Each variable has a default nullable state that depends on its nullability:
	- Nullable variables have a default null-state of maybe-null.
	- Non-nullable variables have a default null-state of not-null.
	- Nullable oblivious variables have a default null-state of not-null.

Before you enable nullable reference types, all declarations in your codebase are nullable oblivious. That's important because it means all reference types have a default null-state of not-null.



## Microsoft Documentation Summary on Stable Library Migration:
	1) For stable libraries add "#nullable enable" at the top of files as you make them nullable aware.
	2) For migration, turn on nullable warnings and fix all warnings before turning on nullable annotations via "#nullable enable".
	3) For new projects, turn on nullables via project settings.
	4) For new files in projects where nullables are not fully turned on, turn on nullables via "#nullable enable".
	5) Once all files are nullable in a project, turn on nullables via project settings and remove the "#nullable enable" from files."
	6) Repeat steps 2-5 for each project in the solution.


